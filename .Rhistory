knitr::opts_chunk$set(fig.width=8, fig.height=5)
options(max.print = 1000)
library(dplyr)
library(ggplot2)
library(magrittr)
library(tidyr)
library(readr)
library(tidyverse)
data <- read_csv("heart.csv")
print(head(data), width = Inf)
dim(data)  # broj redaka, broj stupaca (broj primjera, broj varijabli)
cat("Number of rows: ", nrow(data), "\n")
cat("Number of columns: ", ncol(data), "\n")
cat("Column names:", str_wrap(paste(colnames(data), collapse = ", "), width = 70) , "\n")
cat("Number of rows is ", nrow(data), "\n")
for (column in colnames(data)){
cat("Column: ", column, "has ", length(unique(data[[column]])), " unique values\n")
}
data %>% is.na() %>% colSums()
data$Cholesterol[data$Cholesterol == 0] <- median(data$Cholesterol[data$Cholesterol != 0])
cat(unique(data$Sex), "\n")
oldCategoricalData <- data
data$Sex <- as.numeric(factor(data$Sex, levels = c("F", "M"), labels = c(0, 1))) - 1
data$ExerciseAngina <- as.numeric(factor(data$ExerciseAngina,
levels = c("N", "Y"), labels = c(0, 1))) - 1
data$ChestPainType <- as.numeric(factor(data$ChestPainType,
levels = c("TA", "ATA", "NAP", "ASY"), labels = c(0, 1, 2, 3)))
data$RestingECG <- as.numeric(factor(data$RestingECG,
levels = c("Normal", "ST", "LVH"), labels = c(0, 1, 2)))
data$ST_Slope <- as.numeric(factor(data$ST_Slope,
levels = c("Up", "Flat", "Down"), labels = c(0, 1, 2)))
data[-c(2,3,6,7,9,11,12)] %>% summary()
covMat <- cov(data[-c(2,3,6,7,9,11,12)])
covMat
corrMat <- cor(data[-c(2,3,6,7,9,11,12)])
corrMat
for (column in c(2, 3, 6, 7, 9, 11, 12)) {
column_name <- colnames(oldCategoricalData)[column]
column_values <- oldCategoricalData[[column]]
cat("Column:", column_name, "has values:\n")
print(table(column_values))
cat("\n")
}
print(data %>% group_by(Sex) %>% summarise(
NumOfPatients = n(),
HeartDiseaseRatio = sum(HeartDisease)/n(),
FastingBSRatio = sum(FastingBS)/n(),
ExerciseAnginaRatio = sum(ExerciseAngina)/n(),
Mean.Age = mean(Age),
Mean.RestingBP = mean(RestingBP),
Mean.Cholesterol = mean(Cholesterol),
Mean.MaxHR = mean(MaxHR),
), width = Inf)
boxplot(Cholesterol ~ Sex, data = data)
library(tidyverse)
print(data %>% group_by(HeartDisease) %>% summarise(
NumOfPatients = n(),
FastingBSRatio = sum(FastingBS)/n(),
ExerciseAnginaRatio = sum(ExerciseAngina)/n(),
Mean.Age = mean(Age),
Mean.RestingBP = mean(RestingBP),
Mean.Cholesterol = mean(Cholesterol),
Mean.MaxHR = mean(MaxHR),
), width = Inf)
boxplot(MaxHR ~ HeartDisease, data = data)
boxplot(Age ~ HeartDisease, data = data)
unNormalizedData <- data
withAngine <- data[data$ExerciseAngina == 1,]
withoutAngine <- data[data$ExerciseAngina == 0,]
maxHRWithAngine <- withAngine$MaxHR
maxHRWithoutAngine <- withoutAngine$MaxHR
# crtamo Q-Q plot kako bismo vidjeli odgovaraju li podatci normalnoj raspodjeli
qqnorm(maxHRWithAngine, main = "Q-Q plot for MaxHR with angine")
qqline(maxHRWithAngine)
qqnorm(maxHRWithoutAngine , main = "Q-Q plot for MaxHR without angine")
qqline(maxHRWithoutAngine)
# isto radimo s histogramima
hist(maxHRWithAngine, main = "Histogram for MaxHR with angine")
hist(maxHRWithoutAngine, main = "Histogram for MaxHR without angine")
library(nortest)
lillie.test(maxHRWithoutAngine)
lillie.test(maxHRWithAngine)
var(maxHRWithoutAngine)
var(maxHRWithAngine)
var.test(maxHRWithAngine, maxHRWithoutAngine)
t.test(maxHRWithAngine, maxHRWithoutAngine, var.equal = FALSE)
boxplot(Age ~ ChestPainType, data = unNormalizedData)
print(unNormalizedData %>% group_by(ChestPainType) %>% summarise(
NumOfPatients = n(),
Mean.Age = mean(Age),
Med.Age = median(Age),
Std.Age = sd(Age),
Var.Age = var(Age)
), width = Inf)
useddata <- unNormalizedData
useddata$Age <- (useddata$Age)^1
agePainType1 <- useddata[useddata$ChestPainType == 1,]$Age
agePainType2 <- useddata[useddata$ChestPainType == 2,]$Age
agePainType3 <- useddata[useddata$ChestPainType == 3,]$Age
agePainType4 <- useddata[useddata$ChestPainType == 4,]$Age
{qqnorm(agePainType1, main = "Q-Q za tip boli 1")
qqline(agePainType1, col = "red")}
{qqnorm(agePainType2, main = "Q-Q za tip boli 2")
qqline(agePainType2, col = "red")}
{qqnorm(agePainType3, main = "Q-Q za tip boli 3")
qqline(agePainType3, col = "red")}
{qqnorm(agePainType4, main = "Q-Q za tip boli 4")
qqline(agePainType4, col = "red")}
hist(agePainType1, main = "Histogram of age for pain type 1")
hist(agePainType2, main = "Histogram of age for pain type 2")
hist(agePainType3, main = "Histogram of age for pain type 3")
hist(agePainType4, main = "Histogram of age for pain type 4")
bartlett.test(Age ~ ChestPainType, unNormalizedData)
anova <- aov(Age ~ factor(ChestPainType), data=unNormalizedData)
summary(anova)
kruskal.test(Age ~ ChestPainType, data=unNormalizedData)
colors <- ifelse(oldCategoricalData$HeartDisease == 1, rgb(1,0,0,0.5), rgb(0,0,1,0.5))
plot(oldCategoricalData$Age, oldCategoricalData$MaxHR, col = colors,
main = "Scatter plot for Age and MaxHR", xlab = "Age", ylab = "MaxHR",
pch = 19)
legend("topright", legend = c("Heart Disease", "No Heart Disease"), fill = c("red", "blue"))
library(ggcorrplot)
predictor <- data.frame(data$Age, data$MaxHR)
cor(predictor)
#ggcorrplot(cor(predictor), hc.order = TRUE, type = "lower", lab = TRUE)
logisticModel <- glm(HeartDisease ~ MaxHR + Age, data = data, family = binomial)
summary(logisticModel)
library(pROC)
# Predikcije
predictions <- predict(logisticModel, type = "response")
# ROC krivulja
roc_curve <- roc(data$HeartDisease, predictions)
plot(roc_curve, main = "ROC Curve")
# AUC vrijednost
auc(roc_curve)
# crtamo Q-Q plot da vidimo odgovaraju li podatci normalnoj raspodjeli
male <- data[data$Sex == 1,]
female <- data[data$Sex == 0,]
cholesterolMale <- log(male$Cholesterol)
cholesterolFemale <- log(female$Cholesterol)
qqnorm(cholesterolMale, main = "Q-Q plot for males")
qqline(cholesterolMale)
qqnorm(cholesterolFemale , main = "Q-Q plot for females")
qqline(cholesterolFemale)
# histogrami
hist(cholesterolMale, main = "Histogram for males")
hist(cholesterolFemale, main = "Histogram for females")
var(cholesterolMale)
var(cholesterolFemale)
var.test(cholesterolMale, cholesterolFemale)
t.test(cholesterolMale, cholesterolFemale, var.equal = FALSE)
data_copy = data.frame(data);
tracemem(data)==tracemem(data_copy);
untracemem(data_copy);
tbl_heart_disease = table(data_copy$Sex,
data_copy$HeartDisease)
tbl_heart_disease
added_margins_tbl_heart_disease = addmargins(tbl_heart_disease)
print(added_margins_tbl_heart_disease)
for (col_names in colnames(added_margins_tbl_heart_disease)){
for (row_names in rownames(added_margins_tbl_heart_disease)){
if (!(row_names == 'Sum' | col_names == 'Sum') ){
cat('Očekivane frekvencije za razred ',col_names,'-',row_names,': ',
(added_margins_tbl_heart_disease[row_names,'Sum']
* added_margins_tbl_heart_disease['Sum',col_names])
/ added_margins_tbl_heart_disease['Sum','Sum'],'\n')
}
}
}
chisq.test(tbl_heart_disease, correct=F)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=8, fig.height=5)
options(max.print = 1000)
library(dplyr)
library(ggplot2)
library(magrittr)
library(tidyr)
library(readr)
library(tidyverse)
data <- read_csv("heart.csv")
print(head(data), width = Inf)
dim(data)  # broj redaka, broj stupaca (broj primjera, broj varijabli)
cat("Number of rows: ", nrow(data), "\n")
cat("Number of columns: ", ncol(data), "\n")
cat("Column names:", str_wrap(paste(colnames(data), collapse = ", "), width = 70) , "\n")
cat("Number of rows is ", nrow(data), "\n")
for (column in colnames(data)){
cat("Column: ", column, "has ", length(unique(data[[column]])), " unique values\n")
}
data %>% is.na() %>% colSums()
data$Cholesterol[data$Cholesterol == 0] <- median(data$Cholesterol[data$Cholesterol != 0])
cat(unique(data$Sex), "\n")
oldCategoricalData <- data
data$Sex <- as.numeric(factor(data$Sex, levels = c("F", "M"), labels = c(0, 1))) - 1
data$ExerciseAngina <- as.numeric(factor(data$ExerciseAngina,
levels = c("N", "Y"), labels = c(0, 1))) - 1
data$ChestPainType <- as.numeric(factor(data$ChestPainType,
levels = c("TA", "ATA", "NAP", "ASY"), labels = c(0, 1, 2, 3)))
data$RestingECG <- as.numeric(factor(data$RestingECG,
levels = c("Normal", "ST", "LVH"), labels = c(0, 1, 2)))
data$ST_Slope <- as.numeric(factor(data$ST_Slope,
levels = c("Up", "Flat", "Down"), labels = c(0, 1, 2)))
data[-c(2,3,6,7,9,11,12)] %>% summary()
covMat <- cov(data[-c(2,3,6,7,9,11,12)])
covMat
corrMat <- cor(data[-c(2,3,6,7,9,11,12)])
corrMat
for (column in c(2, 3, 6, 7, 9, 11, 12)) {
column_name <- colnames(oldCategoricalData)[column]
column_values <- oldCategoricalData[[column]]
cat("Column:", column_name, "has values:\n")
print(table(column_values))
cat("\n")
}
print(data %>% group_by(Sex) %>% summarise(
NumOfPatients = n(),
HeartDiseaseRatio = sum(HeartDisease)/n(),
FastingBSRatio = sum(FastingBS)/n(),
ExerciseAnginaRatio = sum(ExerciseAngina)/n(),
Mean.Age = mean(Age),
Mean.RestingBP = mean(RestingBP),
Mean.Cholesterol = mean(Cholesterol),
Mean.MaxHR = mean(MaxHR),
), width = Inf)
boxplot(Cholesterol ~ Sex, data = data)
library(tidyverse)
print(data %>% group_by(HeartDisease) %>% summarise(
NumOfPatients = n(),
FastingBSRatio = sum(FastingBS)/n(),
ExerciseAnginaRatio = sum(ExerciseAngina)/n(),
Mean.Age = mean(Age),
Mean.RestingBP = mean(RestingBP),
Mean.Cholesterol = mean(Cholesterol),
Mean.MaxHR = mean(MaxHR),
), width = Inf)
boxplot(MaxHR ~ HeartDisease, data = data)
boxplot(Age ~ HeartDisease, data = data)
unNormalizedData <- data
withAngine <- data[data$ExerciseAngina == 1,]
withoutAngine <- data[data$ExerciseAngina == 0,]
maxHRWithAngine <- withAngine$MaxHR
maxHRWithoutAngine <- withoutAngine$MaxHR
# crtamo Q-Q plot kako bismo vidjeli odgovaraju li podatci normalnoj raspodjeli
qqnorm(maxHRWithAngine, main = "Q-Q plot for MaxHR with angine")
qqline(maxHRWithAngine)
qqnorm(maxHRWithoutAngine , main = "Q-Q plot for MaxHR without angine")
qqline(maxHRWithoutAngine)
# isto radimo s histogramima
hist(maxHRWithAngine, main = "Histogram for MaxHR with angine")
hist(maxHRWithoutAngine, main = "Histogram for MaxHR without angine")
library(nortest)
lillie.test(maxHRWithoutAngine)
lillie.test(maxHRWithAngine)
var(maxHRWithoutAngine)
var(maxHRWithAngine)
var.test(maxHRWithAngine, maxHRWithoutAngine)
t.test(maxHRWithAngine, maxHRWithoutAngine, var.equal = FALSE)
boxplot(Age ~ ChestPainType, data = unNormalizedData)
print(unNormalizedData %>% group_by(ChestPainType) %>% summarise(
NumOfPatients = n(),
Mean.Age = mean(Age),
Med.Age = median(Age),
Std.Age = sd(Age),
Var.Age = var(Age)
), width = Inf)
useddata <- unNormalizedData
useddata$Age <- (useddata$Age)^1
agePainType1 <- useddata[useddata$ChestPainType == 1,]$Age
agePainType2 <- useddata[useddata$ChestPainType == 2,]$Age
agePainType3 <- useddata[useddata$ChestPainType == 3,]$Age
agePainType4 <- useddata[useddata$ChestPainType == 4,]$Age
{qqnorm(agePainType1, main = "Q-Q za tip boli 1")
qqline(agePainType1, col = "red")}
{qqnorm(agePainType2, main = "Q-Q za tip boli 2")
qqline(agePainType2, col = "red")}
{qqnorm(agePainType3, main = "Q-Q za tip boli 3")
qqline(agePainType3, col = "red")}
{qqnorm(agePainType4, main = "Q-Q za tip boli 4")
qqline(agePainType4, col = "red")}
hist(agePainType1, main = "Histogram of age for pain type 1")
hist(agePainType2, main = "Histogram of age for pain type 2")
hist(agePainType3, main = "Histogram of age for pain type 3")
hist(agePainType4, main = "Histogram of age for pain type 4")
bartlett.test(Age ~ ChestPainType, unNormalizedData)
anova <- aov(Age ~ factor(ChestPainType), data=unNormalizedData)
summary(anova)
kruskal.test(Age ~ ChestPainType, data=unNormalizedData)
colors <- ifelse(oldCategoricalData$HeartDisease == 1, rgb(1,0,0,0.5), rgb(0,0,1,0.5))
plot(oldCategoricalData$Age, oldCategoricalData$MaxHR, col = colors,
main = "Scatter plot for Age and MaxHR", xlab = "Age", ylab = "MaxHR",
pch = 19)
legend("topright", legend = c("Heart Disease", "No Heart Disease"), fill = c("red", "blue"))
library(ggcorrplot)
predictor <- data.frame(data$Age, data$MaxHR)
cor(predictor)
#ggcorrplot(cor(predictor), hc.order = TRUE, type = "lower", lab = TRUE)
logisticModel <- glm(HeartDisease ~ MaxHR + Age, data = data, family = binomial)
summary(logisticModel)
library(pROC)
# Predikcije
predictions <- predict(logisticModel, type = "response")
# ROC krivulja
roc_curve <- roc(data$HeartDisease, predictions)
plot(roc_curve, main = "ROC Curve")
# AUC vrijednost
auc(roc_curve)
# crtamo Q-Q plot da vidimo odgovaraju li podatci normalnoj raspodjeli
male <- data[data$Sex == 1,]
female <- data[data$Sex == 0,]
cholesterolMale <- male$Cholesterol
cholesterolFemale <- female$Cholesterol
qqnorm(cholesterolMale, main = "Q-Q plot for males")
qqline(cholesterolMale)
qqnorm(cholesterolFemale , main = "Q-Q plot for females")
qqline(cholesterolFemale)
# histogrami
hist(cholesterolMale, main = "Histogram for males")
hist(cholesterolFemale, main = "Histogram for females")
var(cholesterolMale)
var(cholesterolFemale)
var.test(cholesterolMale, cholesterolFemale)
t.test(cholesterolMale, cholesterolFemale, var.equal = FALSE)
data_copy = data.frame(data);
tracemem(data)==tracemem(data_copy);
untracemem(data_copy);
tbl_heart_disease = table(data_copy$Sex,
data_copy$HeartDisease)
tbl_heart_disease
added_margins_tbl_heart_disease = addmargins(tbl_heart_disease)
print(added_margins_tbl_heart_disease)
for (col_names in colnames(added_margins_tbl_heart_disease)){
for (row_names in rownames(added_margins_tbl_heart_disease)){
if (!(row_names == 'Sum' | col_names == 'Sum') ){
cat('Očekivane frekvencije za razred ',col_names,'-',row_names,': ',
(added_margins_tbl_heart_disease[row_names,'Sum']
* added_margins_tbl_heart_disease['Sum',col_names])
/ added_margins_tbl_heart_disease['Sum','Sum'],'\n')
}
}
}
chisq.test(tbl_heart_disease, correct=F)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=8, fig.height=5)
options(max.print = 1000)
library(dplyr)
library(ggplot2)
library(magrittr)
library(tidyr)
library(readr)
library(tidyverse)
data <- read_csv("heart.csv")
print(head(data), width = Inf)
dim(data)  # broj redaka, broj stupaca (broj primjera, broj varijabli)
cat("Number of rows: ", nrow(data), "\n")
cat("Number of columns: ", ncol(data), "\n")
cat("Column names:", str_wrap(paste(colnames(data), collapse = ", "), width = 70) , "\n")
cat("Number of rows is ", nrow(data), "\n")
for (column in colnames(data)){
cat("Column: ", column, "has ", length(unique(data[[column]])), " unique values\n")
}
data %>% is.na() %>% colSums()
data$Cholesterol[data$Cholesterol == 0] <- median(data$Cholesterol[data$Cholesterol != 0])
cat(unique(data$Sex), "\n")
oldCategoricalData <- data
data$Sex <- as.numeric(factor(data$Sex, levels = c("F", "M"), labels = c(0, 1))) - 1
data$ExerciseAngina <- as.numeric(factor(data$ExerciseAngina,
levels = c("N", "Y"), labels = c(0, 1))) - 1
data$ChestPainType <- as.numeric(factor(data$ChestPainType,
levels = c("TA", "ATA", "NAP", "ASY"), labels = c(0, 1, 2, 3)))
data$RestingECG <- as.numeric(factor(data$RestingECG,
levels = c("Normal", "ST", "LVH"), labels = c(0, 1, 2)))
data$ST_Slope <- as.numeric(factor(data$ST_Slope,
levels = c("Up", "Flat", "Down"), labels = c(0, 1, 2)))
data[-c(2,3,6,7,9,11,12)] %>% summary()
covMat <- cov(data[-c(2,3,6,7,9,11,12)])
covMat
corrMat <- cor(data[-c(2,3,6,7,9,11,12)])
corrMat
for (column in c(2, 3, 6, 7, 9, 11, 12)) {
column_name <- colnames(oldCategoricalData)[column]
column_values <- oldCategoricalData[[column]]
cat("Column:", column_name, "has values:\n")
print(table(column_values))
cat("\n")
}
print(data %>% group_by(Sex) %>% summarise(
NumOfPatients = n(),
HeartDiseaseRatio = sum(HeartDisease)/n(),
FastingBSRatio = sum(FastingBS)/n(),
ExerciseAnginaRatio = sum(ExerciseAngina)/n(),
Mean.Age = mean(Age),
Mean.RestingBP = mean(RestingBP),
Mean.Cholesterol = mean(Cholesterol),
Mean.MaxHR = mean(MaxHR),
), width = Inf)
boxplot(Cholesterol ~ Sex, data = data)
library(tidyverse)
print(data %>% group_by(HeartDisease) %>% summarise(
NumOfPatients = n(),
FastingBSRatio = sum(FastingBS)/n(),
ExerciseAnginaRatio = sum(ExerciseAngina)/n(),
Mean.Age = mean(Age),
Mean.RestingBP = mean(RestingBP),
Mean.Cholesterol = mean(Cholesterol),
Mean.MaxHR = mean(MaxHR),
), width = Inf)
boxplot(MaxHR ~ HeartDisease, data = data)
boxplot(Age ~ HeartDisease, data = data)
unNormalizedData <- data
withAngine <- data[data$ExerciseAngina == 1,]
withoutAngine <- data[data$ExerciseAngina == 0,]
maxHRWithAngine <- withAngine$MaxHR
maxHRWithoutAngine <- withoutAngine$MaxHR
# crtamo Q-Q plot kako bismo vidjeli odgovaraju li podatci normalnoj raspodjeli
qqnorm(maxHRWithAngine, main = "Q-Q plot for MaxHR with angine")
qqline(maxHRWithAngine)
qqnorm(maxHRWithoutAngine , main = "Q-Q plot for MaxHR without angine")
qqline(maxHRWithoutAngine)
# isto radimo s histogramima
hist(maxHRWithAngine, main = "Histogram for MaxHR with angine")
hist(maxHRWithoutAngine, main = "Histogram for MaxHR without angine")
library(nortest)
lillie.test(maxHRWithoutAngine)
lillie.test(maxHRWithAngine)
var(maxHRWithoutAngine)
var(maxHRWithAngine)
var.test(maxHRWithAngine, maxHRWithoutAngine)
t.test(maxHRWithAngine, maxHRWithoutAngine, var.equal = FALSE)
boxplot(Age ~ ChestPainType, data = unNormalizedData)
print(unNormalizedData %>% group_by(ChestPainType) %>% summarise(
NumOfPatients = n(),
Mean.Age = mean(Age),
Med.Age = median(Age),
Std.Age = sd(Age),
Var.Age = var(Age)
), width = Inf)
useddata <- unNormalizedData
useddata$Age <- (useddata$Age)^1
agePainType1 <- useddata[useddata$ChestPainType == 1,]$Age
agePainType2 <- useddata[useddata$ChestPainType == 2,]$Age
agePainType3 <- useddata[useddata$ChestPainType == 3,]$Age
agePainType4 <- useddata[useddata$ChestPainType == 4,]$Age
{qqnorm(agePainType1, main = "Q-Q za tip boli 1")
qqline(agePainType1, col = "red")}
{qqnorm(agePainType2, main = "Q-Q za tip boli 2")
qqline(agePainType2, col = "red")}
{qqnorm(agePainType3, main = "Q-Q za tip boli 3")
qqline(agePainType3, col = "red")}
{qqnorm(agePainType4, main = "Q-Q za tip boli 4")
qqline(agePainType4, col = "red")}
hist(agePainType1, main = "Histogram of age for pain type 1")
hist(agePainType2, main = "Histogram of age for pain type 2")
hist(agePainType3, main = "Histogram of age for pain type 3")
hist(agePainType4, main = "Histogram of age for pain type 4")
bartlett.test(Age ~ ChestPainType, unNormalizedData)
anova <- aov(Age ~ factor(ChestPainType), data=unNormalizedData)
summary(anova)
kruskal.test(Age ~ ChestPainType, data=unNormalizedData)
colors <- ifelse(oldCategoricalData$HeartDisease == 1, rgb(1,0,0,0.5), rgb(0,0,1,0.5))
plot(oldCategoricalData$Age, oldCategoricalData$MaxHR, col = colors,
main = "Scatter plot for Age and MaxHR", xlab = "Age", ylab = "MaxHR",
pch = 19)
legend("topright", legend = c("Heart Disease", "No Heart Disease"), fill = c("red", "blue"))
library(ggcorrplot)
predictor <- data.frame(data$Age, data$MaxHR)
cor(predictor)
#ggcorrplot(cor(predictor), hc.order = TRUE, type = "lower", lab = TRUE)
logisticModel <- glm(HeartDisease ~ MaxHR + Age, data = data, family = binomial)
summary(logisticModel)
library(pROC)
# Predikcije
predictions <- predict(logisticModel, type = "response")
# ROC krivulja
roc_curve <- roc(data$HeartDisease, predictions)
plot(roc_curve, main = "ROC Curve")
# AUC vrijednost
auc(roc_curve)
# crtamo Q-Q plot da vidimo odgovaraju li podatci normalnoj raspodjeli
male <- data[data$Sex == 1,]
female <- data[data$Sex == 0,]
cholesterolMale <- log(male$Cholesterol)
cholesterolFemale <- log(female$Cholesterol)
qqnorm(cholesterolMale, main = "Q-Q plot for males")
qqline(cholesterolMale)
qqnorm(cholesterolFemale , main = "Q-Q plot for females")
qqline(cholesterolFemale)
# histogrami
hist(cholesterolMale, main = "Histogram for males")
hist(cholesterolFemale, main = "Histogram for females")
var(cholesterolMale)
var(cholesterolFemale)
var.test(cholesterolMale, cholesterolFemale)
t.test(cholesterolMale, cholesterolFemale, var.equal = FALSE)
data_copy = data.frame(data);
tracemem(data)==tracemem(data_copy);
untracemem(data_copy);
tbl_heart_disease = table(data_copy$Sex,
data_copy$HeartDisease)
tbl_heart_disease
added_margins_tbl_heart_disease = addmargins(tbl_heart_disease)
print(added_margins_tbl_heart_disease)
for (col_names in colnames(added_margins_tbl_heart_disease)){
for (row_names in rownames(added_margins_tbl_heart_disease)){
if (!(row_names == 'Sum' | col_names == 'Sum') ){
cat('Očekivane frekvencije za razred ',col_names,'-',row_names,': ',
(added_margins_tbl_heart_disease[row_names,'Sum']
* added_margins_tbl_heart_disease['Sum',col_names])
/ added_margins_tbl_heart_disease['Sum','Sum'],'\n')
}
}
}
chisq.test(tbl_heart_disease, correct=F)
